# Prometheus metrics config
lua_shared_dict prometheus_metrics 50M;

init_worker_by_lua_block {
  prometheus = require('prometheus').init('prometheus_metrics')
  metric_requests = prometheus:counter('http_requests_total', 'Number of HTTP requests', {'host', 'status', 'method'})
  metric_latency = prometheus:histogram('http_request_duration_seconds', 'HTTP request latency', {'host'})
  metric_connections = prometheus:gauge('http_connections', 'Number of HTTP connections', {'state'})
}

log_by_lua_block {
  if ngx.var.request_uri ~= '/health' and ngx.var.request_uri ~= '/metrics' then
    metric_requests:inc(1, {ngx.var.host, ngx.var.status, ngx.var.request_method})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.host})
  end
}

server {
  listen 9145;
  location /metrics {
    content_by_lua_block {
      metric_connections:set(ngx.var.connections_reading, {"reading"})
      metric_connections:set(ngx.var.connections_waiting, {"waiting"})
      metric_connections:set(ngx.var.connections_writing, {"writing"})
      prometheus:collect()
    }
  }
}
